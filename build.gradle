buildscript {
	ext {
		springBootVersion = '1.4.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'application'

mainClassName = "com.baldrichcorp.ml.H2oIrisPredictorApplication"

jar {
	baseName = 'h2o-iris-predictor'
	version = '0.0.1-SNAPSHOT'
}

repositories {
	flatDir {dirs "lib"}
	mavenCentral()
}

dependencies {

    compile name: 'h2o-genmodel'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'org.springframework.boot:spring-boot-starter-data-rest'
    compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.projectlombok:lombok:1.16.10'

	runtime 'com.h2database:h2'

	testCompile 'org.springframework.boot:spring-boot-starter-test'
}

task deleteTmp(type: Delete) {
    delete "tmp/"
}

task trainModels(type: Exec, dependsOn: deleteTmp) {
    commandLine "sh", "train_models.sh"
}

task placeGenModelJar(type: Copy, dependsOn: trainModels) {
    from "tmp/h2o-genmodel.jar"
    into "lib"
}

task placePredictionModels(type: Copy, dependsOn: placeGenModelJar){
    from("tmp/"){
		include "*.jar"
    }
	into "src/main/resources"
	exclude "h2o-genmodel.jar"
}

task(generateModels, dependsOn: placePredictionModels) << {
}

compileJava.dependsOn generateModels

task cleanGenerated(type: Delete) {
    delete "tmp",
            "lib/h2o-genmodel.jar",
            "src/main/resources/GBMIrisPredictor.jar",
			"src/main/resources/RFIrisPredictor.jar"
}

clean.dependsOn cleanGenerated